@model DataService.LeagueRank.RankLeague
@if (Model.Teams.Count > 0)
{
    <div class="row col-sm-12">
        <div class="rank">
            <div class="playOff">
                <table class="table table-bordered tableRank">
                    <thead>
                        <tr>
                            <th class="col-sm-1">#</th>
                            <th>@Messages.Team</th>
                            <th class="col-sm-1">@Messages.GamesNum</th>
                            <th class="col-sm-1">@Messages.WinsNum</th>
                            <th class="col-sm-1">@Messages.LossNum</th>
                            <th class="col-sm-1">@Messages.Acts</th>
                            <th class="col-sm-1">@Messages.ActsRatio</th>
                            <th class="col-sm-1">@Messages.Points</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var team in Model.Teams)
                        {
                            <tr>
                                <td>-</td>
                                <td>@team.Title</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                                <td>0</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else if (Model.IsEmptyRankTable)
{
    <div class="row col-sm-12">
        <div class="rank">
            @foreach (var stage in @Model.Stages.Where(x=>x.Groups.Count > 0))
            {

                var groups = stage.Groups;
                <div class="playOff">
                    @if (groups.Count() > 0 && groups.All(g => g.IsAdvanced))
                    {
                        if (groups.All(g => !g.Teams.Any()))
                        {
                            continue;
                        }
                        var firstGroup = groups.FirstOrDefault();
                        if (firstGroup != null && firstGroup.PlayoffBrackets != null)
                        {
                            int numOfBrackets = (int)firstGroup.PlayoffBrackets;
                            switch (numOfBrackets)
                            {
                                case 1:
                                    <h3>@Messages.Final</h3>
                                    break;
                                case 2:
                                    <h3>@Messages.Semifinals</h3>
                                    break;
                                case 4:
                                    <h3>@Messages.Quarter_finals</h3>
                                    break;
                                case 8:
                                    <h3>@Messages.Final_Eighth</h3>
                                    break;
                                default:
                                    <h3>@(numOfBrackets * 2) @Messages.FinalNumber</h3>
                                    break;
                            }
                        }
                    }
                    else
                    {
                        <h3>@Messages.Stage @stage.Number</h3>
                    }
                    <div class="playOff">
                        @foreach (var group in stage.Groups)
                        {
                            if (!group.IsAdvanced)
                            {
                                <h4>@group.Title</h4>
                            }
                            <table class="table table-bordered tableRank">
                                <thead>
                                    <tr>
                                        <th class="col-sm-1">#</th>
                                        <th>@Messages.Team</th>
                                        @if (!group.IsAdvanced)
                                        {
                                            <th class="col-sm-1">@Messages.GamesNum</th>
                                            <th class="col-sm-1">@Messages.WinsNum</th>
                                            <th class="col-sm-1">@Messages.LossNum</th>
                                            <th class="col-sm-1">@Messages.Acts</th>
                                            <th class="col-sm-1">@Messages.ActsRatio</th>
                                            <th class="col-sm-1">@Messages.Points</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < group.Teams.Count(); i++)
                                    {
                                        <tr>
                                            @if (group.IsAdvanced)
                                            {
                                                int numOfBrackets = (int)group.PlayoffBrackets;
                                                if (i % ((numOfBrackets)) == 0)
                                                {
                                                    <td>@(i + 1)</td>
                                                }
                                                else
                                                {
                                                    <td>-</td>
                                                }
                                            }
                                            else
                                            {
                                                if (i != 0 && group.Teams[i].Position == group.Teams[i - 1].Position)
                                                {
                                                    <td>-</td>
                                                }
                                                else
                                                {
                                                    <td>@(i + 1)</td>
                                                }
                                            }
                                            <td>@group.Teams[i].Title</td>
                                            @if (!group.IsAdvanced)
                                            {
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                                <td>0</td>
                                            }
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="row col-sm-12">
        <div class="rank">
            @foreach (var stage in @Model.Stages)
            {

                var groups = stage.Groups;
                <div class="playOff">
                    @if (groups.Count() > 0 && groups.All(g => g.IsAdvanced))
                    {
                        if (groups.All(g => !g.Teams.Any()))
                        {
                            continue;
                        }
                        var firstGroup = groups.FirstOrDefault();
                        if (firstGroup != null && firstGroup.PlayoffBrackets != null)
                        {
                            int numOfBrackets = (int)firstGroup.PlayoffBrackets;
                            switch (numOfBrackets)
                            {
                                case 1:
                                    <h3>@Messages.Final</h3>
                                    break;
                                case 2:
                                    <h3>@Messages.Semifinals</h3>
                                    break;
                                case 4:
                                    <h3>@Messages.Quarter_finals</h3>
                                    break;
                                case 8:
                                    <h3>@Messages.Final_Eighth</h3>
                                    break;
                                default:
                                    <h3>@(numOfBrackets * 2) @Messages.FinalNumber</h3>
                                    break;
                            }
                        }
                    }
                    else
                    {
                        <h3>@Messages.Stage @stage.Number</h3>
                    }
                    <div class="playOff">
                        @foreach (var group in stage.Groups)
                        {
                            if (!group.IsAdvanced)
                            {
                                <h4>@group.Title</h4>
                            }
                            <table class="table table-bordered tableRank">
                                <thead>
                                <tr>
                                    <th class="col-sm-1">#</th>
                                    <th>@Messages.Team</th>
                                    @if (!group.IsAdvanced)
                                    {
                                        <th class="col-sm-1">@Messages.GamesNum</th>
                                        <th class="col-sm-1">@Messages.WinsNum</th>
                                        <th class="col-sm-1">@Messages.LossNum</th>
                                        <th class="col-sm-1">@Messages.Acts</th>
                                        <th class="col-sm-1">@Messages.ActsRatio</th>
                                            @*<th class="col-sm-1">יחס נקודות</th>*@
                                        <th class="col-sm-1">@Messages.Points</th>
                                    }
                                </tr>
                                </thead>
                                <tbody>
                                @for (var i = 0; i < group.Teams.Count(); i++)
                                {
                                    <tr>
                                        @if (group.IsAdvanced)
                                        {
                                            int numOfBrackets = (int) group.PlayoffBrackets;
                                            if (i%((numOfBrackets)) == 0)
                                            {
                                                <td>@(i + 1)</td>
                                            }
                                            else
                                            {
                                                <td>-</td>
                                            }
                                        }
                                        else
                                        {
                                            if (i != 0 && group.Teams[i].Position == group.Teams[i - 1].Position)
                                            {
                                                <td>-</td>
                                            }
                                            else
                                            {
                                                <td>@(i + 1)</td>
                                            }
                                        }
                                        <td>@group.Teams[i].Title</td>
                                        @if (!group.IsAdvanced)
                                        {
                                            <td>@group.Teams[i].Games</td>
                                            <td>@group.Teams[i].Wins</td>
                                            <td>@group.Teams[i].Loses</td>
                                            <td>@group.Teams[i].SetsWon - @group.Teams[i].SetsLost</td>
                                            <td>@group.Teams[i].SetsRatio</td>
                                                @*<td>@team.TotalPointsScored - @team.TotalPointsLost</td>
                                                    <td>@team.TotalPointsRatio</td>*@
                                            <td>@group.Teams[i].Points</td>
                                        }
                                    </tr>
                                }
                                </tbody>

                            </table>
                            <br/>
                            <table class="table extendedTable " style="direction: @(UICulture.Contains("he-IL")? "ltr" : "rtl")">
                                <thead>
                                @{
                                    char[] alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower().Take(group.ExtendedTables.Count).ToArray();
                                    int charIndex = 0;
                                }
                                <tr>
                                    @for (var i = alpha.Length- 1; i >= 0; i--)
                                    {
                                        <th style="text-align: center;">@alpha[i]</th>
                                    }
                                    <th>@Messages.Team</th>
                                    <th></th>
                                </tr>
                                </thead>
                                <tbody>

                                    @foreach (var team in group.ExtendedTables)
                                    {
                                            <tr>
                                                @for (var i = group.ExtendedTables.Count - 1; i >= 0; i--)
                                                {
                                                    if (group.ExtendedTables[i].TeamId == team.TeamId)
                                                    {
                                                        <td style="background-color: #eee"></td>
                                                    }
                                                    else
                                                    {
                                                        <td style="text-align: center; direction: @(UICulture.Contains("he-IL")? "ltr" : "rtl")">
                                                            @foreach (var score in team.Scores.Where(x => x.OpponentTeamId == group.ExtendedTables[i].TeamId))
                                                            {

                                                                <span>
                                                                    @score.OpponentScore: @score.TeamScore
                                                                </span>
                                                                <br />

                                                            }
                                                        </td>
                                                    }

                                                }
                                                
                                                <td>@team.TeamName</td>
                                                <td>@alpha[charIndex++]</td>
                                            </tr>
                                            }

                                </tbody>


                            </table>

                                    }
                      
                      
                    </div>
                </div>
                                }
        </div>
    </div>
                                }
