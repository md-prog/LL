@using AppModel
@using DataService.DTO
@model Schedules
@{
    TempData["IsChrono"] = true;

    bool userIsEditor = User.IsInAnyRole(AppRole.Admins, AppRole.Editors, AppRole.Workers);
    string publishVisible = userIsEditor ? "visible" : "hidden";
    var leagueId = Model.Leagues.First().Id;
}

<input id="leagueId" type="text" value="@leagueId" hidden />
<input id="isChronological" type="text" value="true" hidden />

@if (userIsEditor)
{
    <a href="@Url.Action("AddEvent", "Events", new { leagueId = leagueId, isChronological = true})"
       data-target="#addevent"
       data-toggle="modal"
       class="btn btn-primary btn-edit">
        @Messages.AddEvent
    </a>
}

<a href="javascript:gcList.SubmitScheduleCond(@leagueId, true)"
   class="btn btn-primary btn-edit">
    <i class="glyphicon glyphicon-refresh"></i> @Messages.Refresh
</a>
<a href='javascript:gcList.SubmitScheduleCond(@leagueId, false, @(((bool)Session["desOrder"]).ToString().ToLowerInvariant()))'
   class="btn btn-primary space-1">
    @Messages.ShowGamesStages
</a>
<a href='javascript:gcList.SubmitScheduleCond(@leagueId, true, @((!(bool)Session["desOrder"]).ToString().ToLowerInvariant()))'
   class="btn btn-primary">
    @Messages.ChangeOrderStages
</a>
@if (userIsEditor)
{
    <a id="export-to-excel" class="btn btn-info" href="@Url.Action("ExportToExcel", "Schedules", new {leagueId = leagueId})" data-toggle="tooltip" title="@Messages.TooltipExportToExcel">
        <i href="#" class="glyphicon glyphicon-open"></i> @Messages.ExportToExcel
    </a>
    <a href="#" class="btn btn-info" style="margin-right: 4px;" onclick="$('#uploadFileBtn').click()" data-toggle="tooltip" title="@Messages.TooltipImportFromExcel">
        <i href="#" class="glyphicon glyphicon-open" style="transform: rotate(180deg)"></i> @Messages.ImportFromExcel
    </a>
    <a href="@GlobVars.SiteUrl/LeagueTable/Schedules/@leagueId?seasonId=@Model.SeasonId" target="_blank" class="btn btn-info" style="margin-right: 4px;">@Messages.ExternalLink</a>

    using (Html.BeginForm("ImportFromExcel", "Schedules", FormMethod.Post, new { id = "importExcelForm", enctype = "multipart/form-data" }))
    {
        <input type="file" id="uploadFileBtn" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel" name="importedExcel" style="display: none" />
    }
}


@{
    Html.RenderPartial("_ShedulesDateConditions", Model);
    <div id="event_list">
        @Html.Action("List", "Events", new { leagueId = leagueId, seasonId = Model.SeasonId })
    </div>
}

<table id="res_tbl" class="table table-bordered offset-2">
    <thead>
        <tr>
            <th width="3%">@Messages.Status</th>
            <th width="6%">@Messages.Group</th>
            <th width="10%" style="min-width:160px">@Messages.StartDate</th>
            <th width="12%">@Messages.Auditorium</th>
            <th width="12%">@Messages.Referee</th>
            <th class="text-center" width="20%">@Messages.HomeTeam</th>
            <th width="1%"></th>
            @if (userIsEditor)
            {
                <th width="2%">@Messages.Swap</th>
            }
            <th width="1%"></th>
            <th class="text-center" width="20%">@Messages.GuestTeam</th>
            @if (userIsEditor)
            {
                <th width="13%"></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var m in Model.Games.OrderBy(gc => gc.StartDate).ThenBy(gc => gc.Group.Name))
        {
            var auditoriums = new SelectList(Model.Auditoriums, nameof(AuditoriumShort.Id), nameof(AuditoriumShort.Name), m.AuditoriumId);
            var referees = new SelectList(Model.Referees, nameof(AppModel.User.UserId), nameof(AppModel.User.FullName), m.RefereeId);
            var isWaitingDivision = m.GameStatus != GameStatus.Started && m.GameStatus != GameStatus.Ended && m.Group.TypeId == 1;
            <tr id="row@(m.CycleId)">
                @using (Ajax.BeginForm("Update", null,
            new AjaxOptions
            {
                OnSuccess = "gcList.cycleUpdated(data)",
                OnFailure = "gcList.cycleUpdateError(data)"
            },
            new { id = "gamefrm" + m.CycleId }))
                {
                    <td>
                        @if (m.GameStatus == GameStatus.Started)
                        {
                            <span class="label label-success">@Messages.Started</span>
                        }
                        else if (m.GameStatus == GameStatus.Ended)
                        {
                            <span class="label label-danger">@Messages.Ended</span>
                        }
                        else
                        {
                            <span class="label label-default">@Messages.Waiting</span>
                        }
                    </td>
                    if (m.Group != null)
                    {
                        <td>@m.Group.Name</td>
                    }
                    else
                    {
                        <td class="text-center"></td>
                    }
                    if (userIsEditor)
                    {
                        <td style="position:relative">
                            <input name="StartDate" class="form-control frm-date" type="text" value="@m.StartDate.ToString("dd/MM/yyyy HH:mm")" form="gamefrm@(m.CycleId)" />
                        </td>
                                <td>@Html.DropDownList("AuditoriumId", auditoriums, Messages.Select, new { @class = "form-control", @form = "gamefrm" + m.CycleId })</td>
                                <td>@Html.DropDownList("RefereeId", referees, Messages.Select, new { @class = "form-control", @form = "gamefrm" + m.CycleId })</td>
                    }
                    else
                    {
                        <td style="position:relative">
                            @m.StartDate
                        </td>
                                <td>@(m.AuditoriumId.HasValue ? m.Auditorium.Name : "")</td>
                                <td>@(m.RefereeId.HasValue ? m.User.FullName : "")</td>
                    }
                    <td class="text-center">
                        @if (@m.HomeTeam != null)
                        {
                            var homeTeamDetails = m.HomeTeam.TeamsDetails.FirstOrDefault(x => x.SeasonId == Model.SeasonId);
                            var teamName = homeTeamDetails == null ? m.HomeTeam.Title : homeTeamDetails.TeamName;
                            <label class="home-team-label">
                                @if (isWaitingDivision && m.GroupeId > 0)
                                { <a href="javascript:gcList.unlockHomeTeam(@m.CycleId)"><i class="fa fa-lock"></i></a>}
                                <span class="home-team-text">@teamName</span>
                            </label>
                            if (isWaitingDivision && m.GroupeId > 0)
                            {
                                <span class="input-group home-team-drop-down" style="display: none">
                                    <a href="javascript:gcList.lockHomeTeam(@m.CycleId)"><i class="fa fa-unlock"></i></a>
                                    @Html.DropDownList("HomeTeamId",
                                                        new SelectList(Model.teamsByGroups[m.GroupeId ?? 0],
                                                            nameof(TeamShortDTO.TeamId), nameof(TeamShortDTO.Title), m.HomeTeam.TeamId),
                                                        //Messages.Select,
                                                        new
                                                        {
                                                            @class = "form-control home-team-id",
                                                            @form = "gamefrm" + m.CycleId,
                                                            @onchange = $"gcList.HomeTeamChanged({m.CycleId}, this.options[this.selectedIndex].innerText)"
                                                        })
                                </span>
                            }
                        }
                        else if (@m.PlayoffBracket != null)
                        {
                            if (m.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Winner)
                            {
                                <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = m.PlayoffBracket.Id, index = 1 })"
                                   data-target="#barcket-potential-teams"
                                   data-toggle="modal">@Messages.Winner</a>
                            }
                            else if (m.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Loseer)
                            {
                                <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = m.PlayoffBracket.Id, index = 1 })"
                                   data-target="#barcket-potential-teams"
                                   data-toggle="modal">@Messages.Loser</a>
                            }
                            else
                            {
                                @("--")
                            }
                        }
                        @if (m.TechnicalWinnnerId.HasValue && m.TechnicalWinnnerId == m.HomeTeamId)
                        {
                            <span class="label label-success">@Messages.TechWin</span>
                        }
                    </td>
                            <td>
                                @m.GameSets.Sum(x => x.HomeTeamScore)

                            </td>
                    if (userIsEditor)
                    {
                        <td>
                            <a class="btn btn-sm btn-primary"
                               href="@Url.Action("Toggle", new { id = m.CycleId, isChronological = true })"
                               data-ajax-update="#schedules"
                               data-ajax="true">
                                <i href="#" class="glyphicon glyphicon-resize-horizontal"></i>
                            </a>
                        </td>
                    }
                    <td>
                        @m.GameSets.Sum(x => x.GuestTeamScore)
                    </td>
                            <td class="text-center">
                                @if (@m.GuestTeam != null)
                                {
                                    var guestTeamDetails = m.GuestTeam.TeamsDetails.FirstOrDefault(x => x.SeasonId == Model.SeasonId);
                                    var teamName = guestTeamDetails == null ? m.GuestTeam.Title : guestTeamDetails.TeamName;
                                    <label class="guest-team-label">
                                        @if (isWaitingDivision && m.GroupeId > 0)
                                        { <a href="javascript:gcList.unlockGuestTeam(@m.CycleId)"><i class="fa fa-lock"></i></a>}
                                        <span class="guest-team-text">@teamName</span>
                                    </label>
                                    if (isWaitingDivision && m.GroupeId > 0)
                                    {
                                        <span class="input-group guest-team-drop-down" style="display: none">
                                            <a href="javascript:gcList.lockGuestTeam(@m.CycleId)"><i class="fa fa-unlock"></i></a>
                                            @Html.DropDownList("GuestTeamId",
                                                        new SelectList(Model.teamsByGroups[m.GroupeId ?? 0],
                                                            nameof(TeamShortDTO.TeamId), nameof(TeamShortDTO.Title), m.GuestTeam.TeamId),
                                                        //Messages.Select,
                                                        new
                                                        {
                                                            @class = "form-control guest-team-id",
                                                            @form = "gamefrm" + m.CycleId,
                                                            @onchange = $"gcList.GuestTeamChanged({m.CycleId}, this.options[this.selectedIndex].innerText)"
                                                        })
                                        </span>
                                    }
                                }
                                else if (@m.PlayoffBracket != null)
                                {
                                    if (m.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Winner)
                                    {
                                        <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = m.PlayoffBracket.Id, index = 2 })"
                                           data-target="#barcket-potential-teams"
                                           data-toggle="modal">@Messages.Winner</a>
                                    }
                                    else if (m.PlayoffBracket.Type == (int)AppModel.PlayoffBracketType.Loseer)
                                    {
                                        <a href="@Url.Action("PotentialTeams", "GameCycle", new { id = m.PlayoffBracket.Id, index = 2 })"
                                           data-target="#barcket-potential-teams"
                                           data-toggle="modal">@Messages.Loser</a>
                                    }
                                    else
                                    {
                                        @("--")
                                    }
                                }


                                @if (m.TechnicalWinnnerId.HasValue && m.TechnicalWinnnerId == m.GuestTeamId)
                                {
                                    <span class="label label-success">@Messages.TechWin</span>
                                }
                            </td>
                    if (userIsEditor)
                    {
                        <td>
                            <a class="btn btn-sm btn-danger"
                               href="@Url.Action("Delete", new { id = m.CycleId, isChronological = true })"
                               data-ajax-confirm="@Messages.DeleteConfirm"
                               data-ajax-update="#schedules"
                               data-ajax="true"
                               title="@Messages.Delete">
                                <i class="glyphicon glyphicon-trash"></i>
                            </a>

                            <input name="CycleId" type="hidden" value="@m.CycleId" form="gamefrm@(m.CycleId)" />

                            <a class="btn btn-sm btn-success"
                               name="savebtn"
                               disabled="disabled"
                               onclick="gcList.SubmitGameForm(@m.CycleId)"
                               title="@Messages.Save">
                                <i class="glyphicon glyphicon-saved"></i>
                            </a>

                            @if (m.HomeTeamId != null && m.GuestTeamId != null)
                            {
                                <a class="btn btn-sm btn-primary"
                                   href="@Url.Action("Edit", "GameCycle", new { id = m.CycleId })"
                                   title="@Messages.ToGame">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                </a>
                            }
                            else
                            {
                                <a class="btn btn-sm btn-primary"
                                   href="@Url.Action("Edit", "GameCycle", new { id = m.CycleId })"
                                   disabled="disabled"
                                   title="@Messages.ToGame">
                                    <i class="glyphicon glyphicon-pencil"></i>
                                </a>
                            }
                            @*@Html.ActionLink(Messages.ToGame, "Edit", "GameCycle", new { id = m.CycleId }, new { @class = "btn btn-sm btn-success" })*@
                        </td>
                    }
                }
            </tr>
        }
    </tbody>
</table>


<script type="text/javascript" src="~/Scripts/pages/gameCycleList.js"></script>

<script>
    $(document).ready(function () {
        gcList.documentReady();
        $('#choice-submit').click(function() {
            gcList.SubmitScheduleCond(@leagueId, true);
        });
    });
</script>

<div class="modal fade" id="barcket-potential-teams" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>
