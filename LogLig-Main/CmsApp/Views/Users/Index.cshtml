@model IQueryable<AppModel.User>

<h3 class="sub-header">משתמשים</h3>

<form class="form-inline filters" role="form">
    <div class="form-group pull-left last">
        <a href="@Url.Action("Edit")" class="btn btn-primary" 
        data-target="#useredit" 
        data-toggle="modal"><i class="glyphicon glyphicon-plus"></i> הוסף חדש</a>
    </div>
</form>

@Html.Grid(Model).Columns(c =>
{
c.Add(m => m.UserId).Titled("#").SetWidth(80);
c.Add(m => m.UserName).Titled("שם");
c.Add(m => m.UsersType.TypeName).Titled("הרשאה");
c.Add().Titled("שם משתמש").Encoded(false).Sanitized(false).RenderValueAs(m => IsBlocked(m));
c.Add(m => m.Email).Titled("אימייל");
c.Add().Encoded(false)
      .Sanitized(false)
      .SetWidth(30)
      .RenderValueAs(m => @<a href="@Url.Action("Edit", new { id = m.UserId })"
           class="btn btn-primary btn-edit glyphicon glyphicon-pencil"
           data-target="#useredit"
           data-toggle="modal"></a>);

}).EmptyText(Messages.NoDataFound).WithPaging(ViewBag.PageSize)

<div class="modal fade" id="useredit" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content" id="userform_pl"></div>
    </div>
</div>

@helper IsBlocked(AppModel.User u)
{
    if(u.IsBlocked) {
        <span class="text-danger">@u.UserName <i class="glyphicon glyphicon-ban-circle"></i> (חסום)</span>
    }
    else {
        <span>@u.UserName</span>
    }
}
