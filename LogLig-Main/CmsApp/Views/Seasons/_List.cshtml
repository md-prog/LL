@model SeasonViewModel

<div id="season-list">
    <a class="btn btn-primary btn-edit"
       href="@Url.Action("Create", "Seasons", new
        {
            logicalName = Model.LogicalName,
            entityId = Model.EntityId,
            seasonId = Model.SeasonId
        })"
       data-target="#season_modal_view"
       data-toggle="modal">
        <i class="glyphicon glyphicon-plus"></i> @Messages.AddNew
    </a>
    <table class="table table-bordered offset-3">
        <thead>
        <tr>
            <th>Name</th>
            <th>Start date</th>
            <th>End date</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var season in Model.Seasons)
        {
            <tr>
                <td>@season.Name</td>
                <td>@season.StartDate.ToString("dd-MM-yyyy")</td>
                <td>@season.EndDate.ToString("dd-MM-yyyy")</td>
            </tr>
        }
        </tbody>
    </table>
</div>

<div class="modal fade" id="season_modal_view" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content" id="season_modal_form"></div>
    </div>
</div>
<link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css"
      rel="stylesheet" type="text/css" />
<script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"
        type="text/javascript"></script>
<script>
    $(document).on('click', '#create-season', function () {
        var startDate = new Date($('#StartDate').val());
        var endDate = new Date($('#EndDate').val());
        var isDuplicate = $('#rb-create-existed').prop('checked');
        var leagues = $('#ddlExistedSeasons').val();

        $('#IsDuplicate').val(isDuplicate);
        $('#Leagues').val(leagues);

        if (endDate <= startDate) {
            alert('End date should be more than start date.');
            return false;
        }

        if ($('#rb-create-existed').is(':checked')) {
            if (!confirm('Are you sure you want to lock the current season and set a new season? It won\'t be possible to edit locked current season.')) {
                return false;
            }
        }
    });

    $(document).on('change', '#season-form :radio', function() {
        var radio = $(this);

        if (radio.attr('id') == 'rb-create-existed') {
            $('#existed-seasons-row').show();
        } else {
            $('#existed-seasons-row').hide();
            $('#StartDate').val('');
            $('#EndDate').val('');
            $('#Description').val('');
            $('#existed-seasons-row select').find('option:first').attr('selected', 'selected');
        }
    });
     function parseDate(value) {
        var date = new Date((parseInt(value.substr(6))));
        return GetFormattedDate(date);
    }

    function GetFormattedDate(inputFormat) {
        function pad(s) { return (s < 10) ? '0' + s : s; }

        var d = new Date(inputFormat);
        @*if ('@Messages.Lang' == 'he') {
            return [pad(d.getDate()), pad(d.getMonth() + 1), d.getFullYear()].join('-');
        } else {
            return [pad(d.getMonth() + 1), pad(d.getDate()), d.getFullYear()].join('-');
        }*@
        return [pad(d.getMonth() + 1), pad(d.getDate()), d.getFullYear()].join('-');
    }
</script>